from collections import defaultdict
class Solution:
    def commonChars(self, words: List[str]) -> List[str]:
        def find_min(x,words):
            num=words[0].count(x)
            for i in range(1,len(words)):
                if words[i].count(x)<num:
                    num=words[i].count(x)
            return num

        d=defaultdict(lambda:float('inf'))
        first_word=words[0]
        for x in first_word:
            d[x]=min(d[x],find_min(x,words))
        res=[key for key,val in d.items() for i in range(val)]
        return res

#======================== Using Counter ========================#

from collections import Counter

class Solution:
    def commonChars(self, words: List[str]) -> List[str]:
        def count_char(words):
            return Counter(words)
        
        count_dict=count_char(words[0])
        for i in range(1,len(words)):
            word_count=count_char(words[i])
            count_dict &= word_count
        return list(count_dict.elements())
