# Java

/*
// Definition for a Node.
class Node {
    public int val;
    public List<Node> children;

    public Node() {}

    public Node(int _val) {
        val = _val;
    }

    public Node(int _val, List<Node> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
    public List<Integer> postorder(Node root) {
        List<Integer> res=new ArrayList<>();
        trav(root,res);
        return res;
    }
    public void trav(Node root,List<Integer> res){
        if(root==null){
            return;
        }
        for(Node x:root.children){
            trav(x,res);
        }
        res.add(root.val);
    }
}



# Python

"""
# Definition for a Node.
class Node:
    def __init__(self, val=None, children=None):
        self.val = val
        self.children = children
"""

class Solution:
    def postorder(self, root: 'Node') -> List[int]:
        res=[]
        def trav(root):
            if root==None:
                return
            else:
                for i in root.children:
                    trav(i)
                res.append(root.val)
        trav(root)
        return res 
