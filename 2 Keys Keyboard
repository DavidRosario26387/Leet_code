# Java
class Solution {
    public int minSteps(int n) {
        int[] dp=new int[n+1]; //By default it is filled with 0's
        for(int i=2;i<=n;i++){
            dp[i]=i;
            for(int j=1;j<=(i/2);j++){
                if(i%j==0){
                    dp[i]=min(dp[i],dp[j]+(i/j));
                }
            }
        }  
        return dp[n];     
    }
    int min(int a,int b){
        if(a<b){
            return a;
        }
        else{
            return b;
        }
    }
}

# Python

class Solution:
    def minSteps(self, n: int) -> int:
        dp=[0]*(n+1)
        for i in range(2,n+1):
            dp[i]=i
            for j in range(1,i//2+1):
                if i%j==0:
                    dp[i]=min(dp[i],dp[j]+(i//j))
        return dp[n]
