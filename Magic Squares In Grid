class Solution {
    public int numMagicSquaresInside(int[][] grid) {
        int count=0;
        int r=grid.length;
        int c=grid[0].length;
        for(int i=0;i<=r-3;i++){
            for(int j=0;j<=c-3;j++){
                if(is_magic(grid,i,j)){
                    count++;
                }
            }
        }
        return count;
    }
    public boolean is_magic(int[][] grid,int i,int j){
        boolean[] seen=new boolean[10];
        for(int x=0;x<3;x++){
            for(int y=0;y<3;y++){
                int num=grid[i+x][j+y];
                if(num<1 || num>9 || seen[num]){
                    return false;
                }
                seen[num]=true;
            }
        }
        int r_sum=grid[i][j]+grid[i][j+1]+grid[i][j+2];
        //check rows
        for(int x=0;x<3;x++){
            if(r_sum!=grid[i+x][j]+grid[i+x][j+1]+grid[i+x][j+2]){
                return false;
            }
        }
        //check columns
        for(int x=0;x<3;x++){
            if(r_sum!=grid[i][j+x]+grid[i+1][j+x]+grid[i+2][j+x]){
                return false;
            }
        }
        //check diagnols
        if (r_sum != grid[i][j] + grid[i + 1][j + 1] + grid[i + 2][j + 2]) {
            return false;
        }
        if (r_sum != grid[i + 2][j] + grid[i + 1][j + 1] + grid[i][j + 2]) {
            return false;
        }
        return true;
    }
}
