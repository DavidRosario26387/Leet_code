class Solution {
    public boolean areSentencesSimilar(String sentence1, String sentence2) {
        Deque<String> s1=new ArrayDeque<>(Arrays.asList(sentence1.split(" ")));
        Deque<String> s2=new ArrayDeque<>(Arrays.asList(sentence2.split(" ")));

        while(s1.size()!=0 && s2.size()!=0 && s1.peekFirst().equals(s2.peekFirst())){
            s1.pollFirst();
            s2.pollFirst();
        }
        while(s1.size()!=0 && s2.size()!=0 && s1.peekLast().equals(s2.peekLast())){
            s1.pollLast();
            s2.pollLast();
        }
        if(s1.size()==0 || s2.size()==0){
            return true;
        }
        else{
            return false;
        }
        
    }
}


class Solution:
    def areSentencesSimilar(self, sentence1: str, sentence2: str) -> bool:
        s1=sentence1.split()
        s2=sentence2.split()

        while s1 and s2 and s1[0]==s2[0]:
            s1.pop(0)
            s2.pop(0)
        while s1 and s2 and s1[-1]==s2[-1]:
            s1.pop()
            s2.pop()
        if len(s1)==0 or len(s2)==0:
            return True
        else:
            return False
