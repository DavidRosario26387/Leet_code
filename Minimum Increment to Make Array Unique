from collections import defaultdict
class Solution:
    def minIncrementForUnique(self, nums: List[int]) -> int:
        nums.sort()
        moves=0
        last_unique=nums[0]
        for i in range(1,len(nums)):
            if nums[i]<=last_unique:
                moves+=(last_unique-nums[i]+1)
                last_unique+=1
            else:
                last_unique=nums[i]
        return moves 

#-------- Bucket filling --------

dp = [0]*(max(nums)+ 1)
for num in nums:
    dp[num] += 1
count = 0
for i in range(len(dp)-1):
    if dp[i] > 1:
        count += dp[i]-1
        dp[i+1] += (dp[i]-1)
count += dp[-1]*(dp[-1]-1)//2  #cost to slide the remaining at end position
return count 
